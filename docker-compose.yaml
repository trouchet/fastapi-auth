services:
  auth-db:
    container_name: auth-db
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD    
    networks:
      - my_net
    expose:
      - "$POSTGRES_PORT"
    ports:
      - "$POSTGRES_PORT:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  auth-redis:
    container_name: auth-redis
    image: redis:latest
    networks:
      - my_net
    ports:
      - "$REDIS_PORT:$REDIS_PORT"
    restart: always

  auth-app:
    container_name: auth-app
    image: auth-app:latest
    depends_on:
      - auth-db
      - auth-redis
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "$APP_PORT:$APP_PORT"
    networks:
      - my_net
    restart: unless-stopped
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://auth-app:$APP_PORT/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-exporter:
    container_name: redis-exporter
    image: oliver006/redis_exporter
    restart: always
    networks:
      - my_net
    ports:
      - "9121:9121"
    environment:
      - REDIS_URL=redis://auth-redis:6379  # Adjust based on your Redis configuration

  auth-prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    networks:
      - my_net
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Path to your Prometheus config file
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  auth-grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    networks:
      - my_net
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change the admin password as needed


networks:
  my_net:
    driver: bridge

volumes:
  postgres_data:
